name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '{{PHP_VERSION}}'
        extensions: mbstring, dom, fileinfo, mysql, redis, opcache
        coverage: {{COVERAGE_ENABLED}}

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql --host 127.0.0.1 --port 3306 -uroot -e "CREATE DATABASE IF NOT EXISTS testing;"

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: testing
        DB_USERNAME: root
        DB_PASSWORD: 
        REDIS_HOST: 127.0.0.1
        REDIS_PORT: 6379
      run: |
        if [ "{{PARALLEL_TESTS}}" = "true" ]; then
          vendor/bin/paratest --processes=4
        else
          vendor/bin/phpunit --coverage-clover=coverage.xml
        fi

    - name: Upload coverage reports to Codecov
      if: {{COVERAGE_ENABLED}} == 'true'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Run Dusk tests
      if: {{DUSK_ENABLED}} == 'true'
      env:
        APP_URL: http://127.0.0.1:8000
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: testing
        DB_USERNAME: root
        DB_PASSWORD: 
      run: |
        php artisan serve --host=127.0.0.1 --port=8000 &
        sleep 10
        php artisan dusk

    - name: Upload Dusk screenshots
      if: failure() && {{DUSK_ENABLED}} == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: screenshots
        path: tests/Browser/screenshots

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '{{PHP_VERSION}}'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run security audit
      run: composer audit

    - name: Run PHP CS Fixer
      run: |
        composer require --dev friendsofphp/php-cs-fixer
        vendor/bin/php-cs-fixer fix --dry-run --diff --verbose

  docker:
    runs-on: ubuntu-latest
    needs: [tests, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t {{APP_NAME}}:latest .
        docker tag {{APP_NAME}}:latest {{APP_NAME}}:${{ github.sha }}

    - name: Test Docker image
      run: |
        docker run --rm {{APP_NAME}}:latest php artisan --version

